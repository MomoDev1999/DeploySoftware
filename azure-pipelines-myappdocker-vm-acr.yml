variables:
  VM_IP_PUBLICA: "52.232.184.207"
  IMAGE_NAME: "dockermysql"
  ACR_NAME: "sumativatres"
  ACR_USERNAME: "SumativaTres"
  ACR_PASSWORD: "VXFNkcpdw6mm4KGIas1pximKUnI6N01r9ZAKHZ1VN5+ACRCnSqND"

stages:
  - stage: Deploy
    jobs:
      - deployment: DeployToVM
        displayName: "Deploy MySQL to VM"
        environment:
          name: "VM-Docker"
          resourceType: VirtualMachine
        strategy:
          runOnce:
            deploy:
              steps:
                - script: |
                    echo "Autenticándose en Azure Container Registry y ejecutando la imagen Docker..."
                    echo ${ACR_PASSWORD} | sudo docker login ${ACR_NAME}.azurecr.io -u ${ACR_USERNAME} --password-stdin > /dev/null 2>&1

                    # Descargar la imagen desde ACR
                    sudo docker pull ${ACR_NAME}.azurecr.io/${IMAGE_NAME}:latest

                    # Verificar si el contenedor MySQL ya está en ejecución
                    if sudo docker ps -a --format '{{.Names}}' | grep -Eq "^mysql_container\$"; then
                      echo "El contenedor 'mysql_container' ya existe. Iniciándolo nuevamente..."
                      sudo docker start mysql_container
                    else
                      echo "El contenedor 'mysql_container' no existe. Creándolo y ejecutándolo..."
                      sudo docker run -d -p 3306:3306 --name mysql_container \
                        -e MYSQL_ROOT_PASSWORD=Password123 \
                        -e MYSQL_DATABASE=my_database \
                        -e MYSQL_USER=mysqluser \
                        -e MYSQL_PASSWORD=Password123 \
                        ${ACR_NAME}.azurecr.io/${IMAGE_NAME}:latest
                    fi

                    sudo docker ps
                  displayName: "Descargar y ejecutar la imagen MySQL desde ACR"
                  failOnStderr: true
